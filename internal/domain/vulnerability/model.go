package vulnerability

import "time"

// Vulnerability represents a security vulnerability found in a resource
type Vulnerability struct {
	ID                 int64      `json:"id"`
	UserID             int64      `json:"user_id"`
	ScanID             *int64     `json:"scan_id,omitempty"`
	ResourceID         string     `json:"resource_id"`
	Provider           string     `json:"provider"`
	ResourceType       string     `json:"resource_type"`
	CVEID              string     `json:"cve_id,omitempty"`
	VulnerabilityID    string     `json:"vulnerability_id,omitempty"`
	Title              string     `json:"title"`
	Description        string     `json:"description,omitempty"`
	Severity           string     `json:"severity"`
	CVSSScore          *float64   `json:"cvss_score,omitempty"`
	CVSSVector         string     `json:"cvss_vector,omitempty"`
	PackageName        string     `json:"package_name,omitempty"`
	PackageVersion     string     `json:"package_version,omitempty"`
	FixedVersion       string     `json:"fixed_version,omitempty"`
	PackageType        string     `json:"package_type,omitempty"`
	ScannerType        string     `json:"scanner_type"`
	DetectionMethod    string     `json:"detection_method,omitempty"`
	Status             string     `json:"status"`
	Remediation        string     `json:"remediation,omitempty"`
	ReferenceURLs      string     `json:"reference_urls,omitempty"` // JSON array
	PublishedDate      *time.Time `json:"published_date,omitempty"`
	LastModifiedDate   *time.Time `json:"last_modified_date,omitempty"`
	DetectedAt         time.Time  `json:"detected_at"`
	ResolvedAt         *time.Time `json:"resolved_at,omitempty"`
	CreatedAt          time.Time  `json:"created_at"`
	UpdatedAt          time.Time  `json:"updated_at"`
}

// VulnerabilityScan represents a vulnerability scan execution
type VulnerabilityScan struct {
	ID                    int64      `json:"id"`
	UserID                int64      `json:"user_id"`
	ResourceID            string     `json:"resource_id,omitempty"`
	ScanType              string     `json:"scan_type"`
	Status                string     `json:"status"`
	ScannerVersion        string     `json:"scanner_version,omitempty"`
	TotalVulnerabilities  int        `json:"total_vulnerabilities"`
	CriticalCount         int        `json:"critical_count"`
	HighCount             int        `json:"high_count"`
	MediumCount           int        `json:"medium_count"`
	LowCount              int        `json:"low_count"`
	ScanDuration          *int       `json:"scan_duration,omitempty"` // seconds
	ErrorMessage          string     `json:"error_message,omitempty"`
	Metadata              string     `json:"metadata,omitempty"` // JSON
	StartedAt             *time.Time `json:"started_at,omitempty"`
	CompletedAt           *time.Time `json:"completed_at,omitempty"`
	CreatedAt             time.Time  `json:"created_at"`
}

// Severity levels
const (
	SeverityCritical = "critical"
	SeverityHigh     = "high"
	SeverityMedium   = "medium"
	SeverityLow      = "low"
	SeverityInfo     = "info"
)

// Vulnerability statuses
const (
	StatusOpen          = "open"
	StatusPatched       = "patched"
	StatusIgnored       = "ignored"
	StatusFalsePositive = "false_positive"
	StatusAccepted      = "accepted"
)

// Scan types
const (
	ScanTypeTrivy         = "trivy"
	ScanTypeNVD           = "nvd"
	ScanTypeAWSInspector  = "aws-inspector"
	ScanTypeGCPSCC        = "gcp-scc"
	ScanTypeAzureSC       = "azure-sc"
)

// Scan statuses
const (
	ScanStatusPending   = "pending"
	ScanStatusRunning   = "running"
	ScanStatusCompleted = "completed"
	ScanStatusFailed    = "failed"
)

// Provider types
const (
	ProviderAWS       = "aws"
	ProviderGCP       = "gcp"
	ProviderAzure     = "azure"
	ProviderContainer = "container"
	ProviderOS        = "os"
)

// Package types
const (
	PackageTypeOS          = "os"
	PackageTypeLibrary     = "library"
	PackageTypeApplication = "application"
)

// Filter represents query filters for vulnerabilities
type Filter struct {
	Severity     string
	Status       string
	Provider     string
	ResourceID   string
	ResourceType string
	ScannerType  string
	CVEID        string
	MinCVSS      *float64
	MaxCVSS      *float64
}

// ScanFilter represents query filters for vulnerability scans
type ScanFilter struct {
	ScanType   string
	Status     string
	ResourceID string
}

// SeveritySummary represents vulnerability counts by severity
type SeveritySummary struct {
	Critical int `json:"critical"`
	High     int `json:"high"`
	Medium   int `json:"medium"`
	Low      int `json:"low"`
	Info     int `json:"info"`
	Total    int `json:"total"`
}

// StatusSummary represents vulnerability counts by status
type StatusSummary struct {
	Open          int `json:"open"`
	Patched       int `json:"patched"`
	Ignored       int `json:"ignored"`
	FalsePositive int `json:"false_positive"`
	Accepted      int `json:"accepted"`
	Total         int `json:"total"`
}
