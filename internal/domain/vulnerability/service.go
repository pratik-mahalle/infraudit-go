package vulnerability

import "context"

// Service defines the interface for vulnerability business logic
type Service interface {
	// Vulnerability operations
	Create(ctx context.Context, vuln *Vulnerability) (int64, error)
	GetByID(ctx context.Context, userID int64, id int64) (*Vulnerability, error)
	Update(ctx context.Context, userID int64, id int64, updates map[string]interface{}) error
	Delete(ctx context.Context, userID int64, id int64) error
	List(ctx context.Context, userID int64, filter Filter, limit, offset int) ([]*Vulnerability, int64, error)
	UpdateStatus(ctx context.Context, userID int64, id int64, status string) error

	// Summary and statistics
	GetSummary(ctx context.Context, userID int64) (map[string]interface{}, error)
	GetTopVulnerabilities(ctx context.Context, userID int64, limit int) ([]*Vulnerability, error)

	// Resource-specific operations
	ListByResource(ctx context.Context, userID int64, resourceID string) ([]*Vulnerability, error)
	GetResourceSummary(ctx context.Context, userID int64, resourceID string) (map[string]interface{}, error)

	// Scanning operations
	TriggerScan(ctx context.Context, userID int64, scanType string, resourceID string) (int64, error)
	GetScanByID(ctx context.Context, userID int64, scanID int64) (*VulnerabilityScan, error)
	ListScans(ctx context.Context, userID int64, filter ScanFilter, limit, offset int) ([]*VulnerabilityScan, int64, error)
	GetLatestScan(ctx context.Context, userID int64, resourceID string) (*VulnerabilityScan, error)

	// Scanner integrations
	ScanWithTrivy(ctx context.Context, userID int64, resourceID string, target string) error
	ScanWithNVD(ctx context.Context, userID int64, cveID string) (*Vulnerability, error)
	ScanWithCloudNative(ctx context.Context, userID int64, provider string, resourceID string) error
}
